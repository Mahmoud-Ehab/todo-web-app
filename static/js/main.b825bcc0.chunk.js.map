{"version":3,"sources":["components/Header.js","components/Task.js","components/Tasks.js","components/NewTaskForm.js","components/TaskDescription.js","App.js","reportWebVitals.js","index.js"],"names":["header","props","className","style","height","backgroundColor","alt","src","Task","warning","deadline","Date","now","taskStyle1","selected","border","boxShadow","color","taskStyle2","margin","Row","id","onClick","onClickHandler","transform","title","rmvTaskHandler","Tasks","useState","selectedTask","setSelectedTask","useEffect","selectedTaskListener","handleClick","e","target","padding","tasks","map","task","selectedTaskId","getTime","NewTaskForm","Form","onSubmit","preventDefault","formTitle","document","getElementById","formDescr","formDate","newTask","taskId","value","description","submitHandler","Group","Control","type","placeholder","required","width","Button","variant","TaskDescription","time","Alert","t","days","Math","floor","hours","evaluateTime","App","localStorage","getItem","JSON","parse","setTasks","setItem","stringify","Container","filter","tmp","prevTasks","sortedTasks","k","i","length","ctdl","push","generateId","initId","randomId","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b825bcc0.chunk.js","sourcesContent":["const header = (props) => {\n    return (\n        <div className='d-flex flex-row align-items-center'\n        style={{ height: 100, backgroundColor: '#1f90ff' }}>\n            <img\n                alt={'logo'}\n                src={'logo.png'}\n                height={100}\n            />\n            <p className='h2 text-light w-75 text-center'>You have ToDo...</p>\n        </div>\n    );\n};\n\nexport default header;","import Row from 'react-bootstrap/Row';\n\nconst Task = (props) => {\n    const warning = (props.deadline - Date.now()) < (24*60*60*1000);\n\n    const rmvTask = () => {\n        props.rmvTaskHandler(props.id);\n    };\n\n    // Style Objects\n    const taskStyle1 = props.selected ? {\n        backgroundColor: 'rgba(82, 160, 255, 0.75)',\n        border: 'solid rgba(82, 160, 255, 0.2) 2px',\n        boxShadow: 'rgba(0, 0, 0, 0.25) 0px 5px 10px 2px',\n        color: 'white'\n    } : {};\n\n    const taskStyle2 = {\n        backgroundColor: `rgba(150, ${(props.deadline - Date.now()) * 100 / (24*60*60*1000)}, 0, 0.75)`,\n        boxShadow: 'rgba(0, 0, 0, 0.25) 0px 5px 10px 2px',\n        margin: 5,\n        color: 'white'\n    };\n    \n    // return statement - JSX\n    return (\n        <Row \n        className={`taskRow d-flex justify-content-between p-3 mx-3 user-select-none ${warning && 'animate__animated animate__headShake animate__delay-1s'}`}\n        style={warning && !props.selected ? taskStyle2 : taskStyle1}\n        id={props.id}\n        onClick={props.onClickHandler}>\n\n            <label \n            className='d-flex lead mx-3' \n            style={{ transform: 'translateY(4px)' }}\n            id={props.id}\n            onClick={props.onClickHandler}>\n\n                {props.title}\n\n            </label>\n\n            <img id='rmvBtn' alt='delete' src='delete.svg' onClick={rmvTask} />\n        </Row>\n    );\n};\n\nexport default Task;","import Task from './Task';\nimport { useState, useEffect } from 'react';\n\nconst Tasks = (props) => {\n    const [selectedTask, setSelectedTask] = useState(null);\n\n    useEffect(() => {\n        props.selectedTaskListener(selectedTask);\n    }, [selectedTask]);\n\n    // Select one task\n    const handleClick = (e) => {\n        setSelectedTask(e.target.id);\n    };\n\n    // return jsx statement\n    return (\n        <div id='tasksDiv' style={{ padding: 10 }}>\n            {\n                props.tasks.map(\n                    (task) => \n                    <Task id={task.id} selectedTaskId={selectedTask} rmvTaskHandler={props.rmvTaskHandler}\n                    title={task.title} deadline={new Date(task.deadline).getTime()} \n                    selected={task.id == selectedTask} onClickHandler={handleClick} />\n                ) \n            }\n        </div>\n    );\n};\n\nexport default Tasks;","import Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst NewTaskForm = (props) => {\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let formTitle = document.getElementById('formTitle');\n        let formDescr = document.getElementById('formDescription');\n        let formDate = document.getElementById('formDate');\n\n        const newTask = {\n            id: props.taskId,\n            title: formTitle.value,\n            description: formDescr.value,\n            deadline: formDate.value\n        };\n\n        props.submitHandler(newTask);\n        \n        formTitle.value = '';\n        formDescr.value = '';\n        formDate.value = '';\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Control type=\"title\" id='formTitle' placeholder=\"Task Title\" required />\n            </Form.Group>\n\n            <Form.Group>\n                <textarea className='form-control' id='formDescription' type=\"description\" placeholder=\"Task Description\" required\n                style={{ width: '100%' }} />\n            </Form.Group>\n\n            <Form.Group>\n                <input className='form-control' id='formDate' type=\"datetime-local\" placeholder=\"mm/dd/yyyy, hh:mm AM\" required\n                style={{ width: '100%' }} />\n            </Form.Group>\n\n            <Form.Group>\n                <Button variant=\"success\" type=\"submit\">\n                    Add Task\n                </Button>\n            </Form.Group>\n        </Form>\n    );\n};\n\nexport default NewTaskForm;","import Alert from 'react-bootstrap/Alert';\n\nconst TaskDescription = (props) => {\n    const time = new Date(props.deadline).getTime() - Date.now();\n    const maxDur = 24 * 60 * 60 * 1000;\n\n    const evaluateTime = (t) => {\n        const days = Math.floor(t / (24 * 60 * 60 * 1000));\n        t -= days * 24 * 60 * 60 * 1000;\n\n        const hours = Math.floor(t / (60 * 60 * 1000));\n        t -= hours * 60 * 60 * 1000;\n\n        const minutes = Math.floor(t / (60 * 1000));\n\n        return days + ' days ' + hours + ' hours ' + minutes + ' minutes.';\n    };\n\n    return (\n        <div className='container mb-4 p-4 bg-light'>\n            <p className='lead'>{props.title}</p>\n            <p className='text-break'>{props.description}</p>\n            <Alert className='shadow-sm' style={{backgroundColor: `rgba(150,${time * 100 / maxDur},0)`, color: '#ffffff'}}>\n                {time > 0 ? evaluateTime(time) : props.deadline}\n            </Alert>\n        </div>\n    );\n};\n\nexport default TaskDescription;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './stylesheets/animate.css'\nimport './stylesheets/style.css'\nimport Container from 'react-bootstrap/Container';\nimport ToDoHeader from './components/Header';\nimport Tasks from './components/Tasks';\nimport NewTaskForm from './components/NewTaskForm';\nimport TaskDescription from './components/TaskDescription';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n\n  // Hooks\n  let [tasks, setTasks] = useState(\n    localStorage.getItem('TodoApp_Tasks') ? JSON.parse(localStorage.getItem('TodoApp_Tasks')) : []\n  );\n  let [selectedTask, setSelectedTask] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('TodoApp_Tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Event handlers\n  const addTask = (newTask) => {\n    setTasks((prevTasks) => {\n      let sortedTasks = [];\n      let k = -1;\n\n      for (let i = 0; i < prevTasks.length; i++) {\n        const ctdl = new Date(prevTasks[i].deadline).getTime();\n        const ntdl = new Date(newTask.deadline).getTime();\n\n        if (ntdl < ctdl) {\n          sortedTasks.push(newTask);\n          sortedTasks.push(prevTasks[i]);\n          k = i + 1;\n          break;\n        }\n\n        sortedTasks.push(prevTasks[i]);\n      }\n\n      if (k === -1) sortedTasks.push(newTask);\n      else for (; k < prevTasks.length; k++) sortedTasks.push(prevTasks[k]);\n      \n      return [...sortedTasks];\n    });\n  };\n\n  const rmvTask = (taskId) => {\n    setTasks(() => (\n      tasks.filter((task) => task.id !== taskId)\n    ));\n    setSelectedTask(null);\n  };\n\n  const selectTask = (taskId) => {\n    let tmp = tasks.filter((task) => task.id == taskId);;\n    setSelectedTask(tmp[0]);\n  };\n\n  const generateId = (initId) => {\n    let randomId = initId;\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].id == randomId) {\n        randomId = generateId(Math.floor(Math.random() * 100));\n        break;\n      }\n    }\n\n    return randomId;\n  };\n\n  // JSX return statement\n  return (\n    <Container className='d-flex flex-row animate__animated animate__bounceInDown' style={{height: '100vh'}}>\n      <div className='d-flex flex-row flex-wrap m-auto shadow' style={{width: '100%'}}  >\n        <div id='left_div'>\n          <ToDoHeader />\n          <Tasks tasks={tasks} rmvTaskHandler={rmvTask} selectedTaskListener={selectTask} />\n        </div>\n\n        <div id='right_div' className='p-3'>\n            {selectedTask && <TaskDescription title={selectedTask.title} description={selectedTask.description} deadline={selectedTask.deadline} />}\n            <NewTaskForm submitHandler={addTask} taskId={ generateId(Math.floor(Math.random() * 100)) } />\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}